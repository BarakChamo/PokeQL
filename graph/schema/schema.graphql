# An Ability
type Ability {
  # The name of the ability
  name: String
}

# An Evolution
type Evolution {
  # The Pokemon evolving to
  pokemon: Pokemon

  # The evolution trigger
  trigger: EvolutionTrigger

  # The required item
  item: Item

  # The required level
  level: Int

  # If happiness required
  happiness: Int
}

enum EvolutionTrigger {
  LEVELUP
  TRADE
  USEITEM
  SHED
}

# An evolution mutation
type Evolve {
  # The evolved pokemon
  pokemon: Pokemon
}

# An Item
type Item {
  # The ID of the item
  id: ID

  # The cost of the item
  cost: Int

  # The name of the item
  name: String
}

enum Language {
  JA
  ROMAJI
  KO
  ZH
  FR
  DE
  ES
  IT
  EN
}

# A Move
type Move {
  # The type of the move
  type: Type

  # The category of the move
  category: MoveCategory

  # The power of the move
  power: Float

  # The accuracy of the move
  accuracy: Float

  # The power point of the move
  pp: Float

  # The probability of the move
  probability: Float
}

enum MoveCategory {
  STATUS
  PHYSICAL
  SPECIAL
}

# The mutation entrypoint
type Mutation {
  # Evolve a Pokemon
  evolve: Evolve
}

# A Pokemon
type Pokemon {
  # The id of the Pokemon
  id: ID

  # The species of the Pokemon
  species: String

  # The name of the Pokemon
  name: String

  # The sprite image url of the Pokemon
  sprite: String

  # Is Mega Pokemon
  mega: Boolean

  # The types of the Pokemon
  types: [Type]

  # The potential evolutions of the Pokemon
  evolution: [Evolution]

  # The abilities of the Pokemon
  abilities: [Move]

  # The moves of the Pokemon
  moves: [Ability]

  # The height of the Pokemon
  height: Float

  # The weight of the Pokemon
  weight: Float

  # The color of the pokemon
  color: String

  # The HP of the Pokemon
  health: Float

  # The Attack of the Pokemon
  attack: Float

  # The Defense of the Pokemon
  defense: Float

  # The Special Attack of the Pokemon
  specialAttack: Float

  # The Special Defense of the Pokemon
  specialDefense: Float

  # The Speed of the Pokemon
  speed: Float
}

# The query entrypoint
type Query {
  # The current user
  trainer(
    # The language of the trainer
    lang: Language = null
  ): Trainer
}

# Trainer is the current user
type Trainer {
  # A Pokemon
  pokemon(
    # The ID of the Pokemon
    id: ID

    # The name of the Pokemon
    name: String
  ): Pokemon

  # A Pokemon Type
  type(
    # The ID of the Pokemon Type
    id: ID

    # The name of the Pokemon Type
    name: String
  ): Type

  # An item
  item(
    # The ID of the Item
    id: ID

    # The name of the Item
    name: String
  ): Item
}

# A type of a Pokemon
type Type {
  # The ID of a type
  id: String

  # The name of a type
  name: String

  # All the pokemon of the specified type
  pokemon: [Pokemon]
}
